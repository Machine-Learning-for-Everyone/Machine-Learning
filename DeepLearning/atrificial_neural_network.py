# -*- coding: utf-8 -*-
"""ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aIfmCD88DeYKTOmCszl4iK2pkYkwCEu0

# Artificial Neural Network
## Importing the necessery Library
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf

tf.__version__

"""# Data Preprocessing

**Importing the dataset**
"""

dataset = pd.read_csv('./bank.csv')
dataset.head()

X = dataset.iloc[:,3:-1].values
y = dataset.iloc[:,-1].values

"""**Encoding the dataset**"""

# Encoding the gender
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
X[:,2] = le.fit_transform(X[:,2])

# Encoding the geography using OnHotEncoding
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
oe = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')
X = np.array(oe.fit_transform(X))

"""## Splitting the datsets as Training and Testing"""

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y)

"""**Feature Scaling**


"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

"""# Let's Build ANN"""

ann = tf.keras.models.Sequential()

"""Adding the input layer and hidden layers"""

ann.add(tf.keras.layers.Dense(units=6,activation="relu"))

"""Adding the input layer and second hidden layers"""

ann.add(tf.keras.layers.Dense(units=6,activation="relu"))

"""Adding **Activation function**"""

ann.add(tf.keras.layers.Dense(units=1,activation="sigmoid"))

"""## Let's Train the ANN

Training the ANN on the Training set
"""

ann.compile(optimizer='adam',loss = 'binary_crossentropy', metrics = ['accuracy'])

ann.fit(X_train, y_train, batch_size = 32, epochs=120)

"""Predicting the result of single Observation"""

print(ann.predict(sc.transform([[1, 0, 0, 600, 1, 40, 3, 60000, 2, 1, 1, 50000]])) > 0.5)